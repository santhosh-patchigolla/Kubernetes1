# Creates Replicaset 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 3
  strategy: 
    # type: Recreate
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 20
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  selector:
     app: nginx
  ports:
    - protocol: TCP
      port: 80                         # Port number that your service has to listen and this is the port you will access
      targetPort: 80                   # TargetPort forwards the requests to the backend pod
      type: LoadBalancer

---
# This creates an external classic load balancer
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-svc
#   # annotations:                                                              
#   #   service.beta.kubernetes.io/aws-load-balancer-type: application        # Creates Application Load Balancer 
#   #   service.beta.kubernetes.io/aws-load-balancer-internal: true           # Creates Internal Application Load Balancer
# spec:
#   selector:
#      app: nginx
#   ports:
#     - protocol: TCP
#       port: 80                         # Port number that your service has to listen and this is the port you will access
#       targetPort: 80                   # TargetPort forwards the requests to the backend pod
#   type: LoadBalancer               # This is going to create a load balancer [ on your cloud and this is chanrgeable on the top of EKS ]


# Creates Ingress resource 

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: frontend-ingress
# spec:
#   rules:
#   - host: robot-frontend.b54-roboshop.online
#     http:
#       paths:
#       - path: "/"
#         pathType: Prefix
#         backend:
#           service:
#             name: frontend-svc
#             port:
#               number: 80
#   ingressClassName: nginx